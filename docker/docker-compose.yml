version: '2'
services:
  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:4.0.0
    ports:
      - "2181:2181"
    environment:      
      ZOOKEEPER_CLIENT_PORT: "2181"

  kafka:
    container_name: kafka
    hostname: kafka
    image: confluentinc/cp-kafka:4.0.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    container_name: schema-registry
    hostname: schema-registry
    image: confluentinc/cp-schema-registry:4.0.0
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://schema-registry:8081"
      SCHEMA_REGISTRY_DEBUG: "true"

  kafka-rest:
    container_name: kafka-rest
    hostname: kafka-rest
    image: confluentinc/cp-kafka-rest:4.0.0
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_REST_HOST_NAME: "kafka-rest"
      KAFKA_REST_LISTENERS: "http://kafka-rest:8080"
      KAFKA_MESSAGE_MAX_BYTES: 104857600
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      SCHEMA_REGISTRY_DEBUG: "true"

  kafka-connect:
    container_name: kafka-connect
    build: kafka-connect/.
    hostname: kafka-connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_GROUP_ID: "bitcoin"
      CONNECT_REST_PORT: 8083
      CONNECT_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONNECT_CONFIG_STORAGE_TOPIC: "bitcoin-config"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: "bitcoin-offsets"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_STATUS_STORAGE_TOPIC: "bitcoin-status"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_PLUGIN_PATH: "/usr/local/share/kafka/plugins"

  kafka-manager:
    container_name: kafka-manager
    build: kafka-manager/.
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafka
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "letmein"
      KM_ARGS: "-Djava.net.preferIPv4Stack=true"

  influx:
    container_name: influx
    image: influxdb:1.4.3
    hostname: influx
    ports:
      - "8085:8083"
      - "8086:8086"
      - "8090:8090"
      - "8099:8099"
    environment:
      INFLUXDB_GRAPHITE_ENABLED: "true"
      INFLUXDB_DB: "bitcoin"
      INFLUXDB_ADMIN_USER: "root"
      INFLUXDB_ADMIN_PASSWORD: "root"
      INFLUXDB_USER: "root"
      INFLUXDB_USER_PASSWORD: "root"
      INFLUXDB_MAX_VALUES_PER_TAG: "0"
      #INFLUXDB_MAX_VALUES_PER_TAG:  0
      INFLUXDB_DATA_MAX_VALUES_PER_TAG: "0"
      #INFLUXDB_DATA_MAX_VALUES_PER_TAG: 0
      INFLUXDB_UDP_PRECISION: "u"
    volumes:
      - /media/heinz/Elements/docker-share/influxdb:/var/lib/influxdb
      #- /home/docker/influxdb:/var/lib/influxdb

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    hostname: grafana
    ports:
      - "3000:3000"
    links:
      - influx
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_AUTH_BASIC_ENABLED: "false"
      GF_USERS_DEFAULT_THEME: "light"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_ALLOW_ORG_CREATE: "false"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      INFLUX_USER: "root"
      INFLUX_PASSWORD: "root"
      INFLUX_DB: "bitcoin"
      INFLUX_URL: "http://docker:8086"
    volumes:
      - /home/docker/grafana:/var/lib/grafana
